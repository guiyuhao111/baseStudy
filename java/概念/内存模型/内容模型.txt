https://www.cnblogs.com/gw811/archive/2012/10/18/2730117.html
1.java中的内存区域熟悉:
	java内存区域概述：java内存分为 堆 方法区 程序计数器 虚拟机栈 本地方法栈
	---1.堆:堆是java内容中所有线程共享的区域,存放的是实例对象包括对象的各个字段的数据和对象类型的地址,不包静态属性 静态属性(static)是属于类的只有一份.

	---2.虚拟机栈:JVM会为每个线程分配一个栈区,栈中存放了局部变量表,操作栈等信息.方法在执行时JVM会为每一个方法分配一个栈帧用户存储方法在执行期间的局部变量,
	     方法的执行过程其实就是栈帧入栈和出栈的过程

	---3.程序计数器:在多线程情况下处理器会在多个线程之间来回切换,为了记住每个线程指令运行的位置,虚拟机会为每个线程分配一点小小的空间来存放这个位置

	---4.本地方法栈:主要是存储Native方法

	---5.方法区:每个线程共享一个方法区,用于存储类的信息包括类的信息包括方法和静态变量,常量等信息
https://blog.csdn.net/javazejian/article/details/72772461
2.java内存模型:cpu内存模型只要是主内存,工作内存和cpu缓存组成
	2.1:java模型是怎样的结构？
		2.1.1:java模型有一个主内存,主内存的数据是可以供多个线程共享的，方法区和堆就是属于主内存
		java模型中会为每一个线程分配一个工作内存，工作内存包含虚拟机栈，程序计数器，本地方法栈

	2.2:什么是cpu缓存?
		2.2.1:一般cpu会从主内存取数据到寄存器然后再处理,但是cpu处理指令的速度远大于从主内存中进行io读写的速度,所以一般会从主内存中取数据放入高速缓存,第二次取数据时直接从缓存中获取,这样就减少了读取cpu的次数
	
	2.3:java线程和cpu处理器是怎样的关系
		2.3.1:java线程可以说是JVM通过调用操作系统的内核线程来完成,所谓内核线程是指线程调度器使cpu在多个任务中来回切换的结果.当然如果只有一个任务不需要线程调度器
		
	